$date
	Wed Jun 11 13:34:23 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test $end
$var wire 8 ! instruction_adr [7:0] $end
$var wire 1 " power $end
$var reg 1 # clk $end
$var reg 8 $ instruction [7:0] $end
$scope module alu $end
$var wire 1 % clk $end
$var wire 4 & data [3:0] $end
$var wire 4 ' inst [3:0] $end
$var wire 8 ( instruction [7:0] $end
$var wire 4 ) offset [3:0] $end
$var wire 1 * out $end
$var wire 1 " power $end
$var reg 8 + a [7:0] $end
$var reg 8 , b [7:0] $end
$var reg 8 - instruction_adr [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
b0 ,
b0 +
0*
b0 )
b1000000 (
b100 '
b0 &
0%
b1000000 $
0#
1"
b0 !
$end
#5000
b11 &
b10 '
b1 -
b1 !
b100011 $
b100011 (
1#
1%
#10000
0#
0%
#15000
b0 &
b11 '
1*
b110000 $
b110000 (
b11 +
b10 -
b10 !
1#
1%
#20000
0#
0%
#25000
0*
b10 '
b11 ,
b0 +
b11 -
b11 !
b100000 $
b100000 (
1#
1%
#30000
0#
0%
#35000
b0 '
b0 $
b0 (
b100 -
b100 !
1#
1%
#40000
0#
0%
#45000
1*
b1 '
b11 +
b101 -
b101 !
b10000 $
b10000 (
1#
1%
#50000
0#
0%
#55000
b11 '
0*
b110000 $
b110000 (
b11111100 +
b110 -
b110 !
1#
1%
#60000
0#
0%
#65000
1*
b1 &
b10 '
b11111100 ,
b11 +
b111 -
b111 !
b100001 $
b100001 (
1#
1%
#70000
0#
0%
#75000
b0 &
b0 '
b0 $
b0 (
b1 +
b1000 -
b1000 !
1#
1%
#80000
0#
0%
#85000
b11 '
b11111101 +
b1001 -
b1001 !
b110000 $
b110000 (
1#
1%
#90000
0#
0%
#95000
b1000 &
b10 '
0*
b101000 $
b101000 (
b11111101 ,
b11111100 +
b1010 -
b1010 !
1#
1%
#100000
0#
0%
#105000
b0 &
b0 '
b1000 +
b1011 -
b1011 !
b0 $
b0 (
1#
1%
#110000
0#
0%
#115000
0"
b1111 '
1*
b11110000 $
b11110000 (
b101 +
b1100 -
b1100 !
1#
1%
#120000
0#
0%
#125000
x"
bx )
bx &
bx '
b1101 -
b1101 !
bx $
bx (
1#
1%
